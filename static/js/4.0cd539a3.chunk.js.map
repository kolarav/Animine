{"version":3,"sources":["components/js files/Details.js","components/js files/Content.js"],"names":["Details","anime","episodes","details","className","src","image_url","alt","id","style","flexDirection","score","title","type","start_date","end_date","Card","lazy","Content","content","useState","anime_id","setId","data","setdata","got","setGot","useEffect","document","getElementById","top","fallback","flexWrap","justifyContent","width","maxWidth","paddingBottom","map","height","background","margin","onClick","mal_id","poster","rating"],"mappings":"gKA0BeA,MAxBf,SAAiBC,GACf,IAAIC,EAAWD,EAAME,QAAQD,SAK7B,OAJiB,OAAbA,IACFA,EAAW,aAIX,sBAAKE,UAAU,QAAf,UACE,qBAAKC,IAAKJ,EAAME,QAAQG,UAAWC,IAAI,UAAUC,GAAG,WACpD,sBAAKJ,UAAU,cAAcK,MAAO,CAAEC,cAAe,UAArD,UACE,0CAAaT,EAAME,QAAQQ,SAC3B,yCAAYV,EAAME,QAAQS,SAC1B,wCAAWX,EAAME,QAAQU,QACzB,6CAAgBX,KAChB,8CAAiBD,EAAME,QAAQW,cAC/B,2CACY,IACTb,EAAME,QAAQY,SAAWd,EAAME,QAAQY,SAAW,qBChBvDC,EAAOC,gBAAK,kBAAM,gCA6ETC,UA1Ef,YAA+B,IAAZC,EAAW,EAAXA,QACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsBJ,oBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAqBA,OATAC,qBAAU,WACS,KAAbN,IACFK,GAAO,GAXEE,SAASC,eAAe,iBAChCpB,MAAMqB,IAAT,OAYER,EAAM,OAGP,CAACD,IAGF,gCACE,cAAC,WAAD,CAAUU,SA5BQ,yCA4BlB,SACE,qBACE3B,UAAU,UACVK,MAAO,CACLuB,SAAU,OACVC,eAAgB,SAChBC,MAAO,MACPC,SAAU,SACVC,cAAe,QAPnB,SAUGjB,EAAQkB,KAAI,SAACpC,GAAD,OACX,wBACEG,UAAU,WACVK,MAAO,CACLyB,MAAO,cACPI,OAAQ,cACRC,WAAY,cACZC,OAAQ,aAEVC,QAAS,WACPjB,EAAQvB,GACRyB,GAAO,GACPJ,EAAMrB,EAAMyC,SAXhB,SAcE,cAAC1B,EAAD,CAEEJ,MAAOX,EAAMW,MACb+B,OAAQ1C,EAAMK,UACdsC,OAAQ3C,EAAMU,OAHTV,EAAMyC,iBASrB,sBAAKlC,GAAG,gBAAR,UACE,wBAAQA,GAAG,YAAYiC,QArDhB,WACAb,SAASC,eAAe,iBAChCpB,MAAMqB,IAAT,SAmDI,mBAGA,8BACE,cAAC,EAAD,CAA2BL,IAAKA,EAAKtB,QAASoB,GAAhCA,EAAKmB","file":"static/js/4.0cd539a3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Details(anime) {\r\n  let episodes = anime.details.episodes;\r\n  if (episodes === null) {\r\n    episodes = \"Not fixed\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"upper\">\r\n      <img src={anime.details.image_url} alt=\"loading\" id=\"poster\" />\r\n      <div className=\"information\" style={{ flexDirection: \"column\" }}>\r\n        <h2>Rating: {anime.details.score}</h2>\r\n        <h2>Title: {anime.details.title}</h2>\r\n        <h2>Type: {anime.details.type}</h2>\r\n        <h2>Epiosodes: {episodes}</h2>\r\n        <h2>Start Date: {anime.details.start_date}</h2>\r\n        <h2>\r\n          End Date:{\" \"}\r\n          {anime.details.end_date ? anime.details.end_date : \"Not sure\"}\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Details;\r\n","import React, { lazy, Suspense, useEffect, useState } from \"react\";\r\nimport \"../css files/Details.css\";\r\nimport Details from \"./Details\";\r\nconst Card = lazy(() => import(\"./Card\"));\r\nconst rendering = () => <h4>loading</h4>;\r\n\r\nfunction Content({ content }) {\r\n  const [anime_id, setId] = useState(\"\");\r\n  const [data, setdata] = useState([]);\r\n  const [got, setGot] = useState(false);\r\n\r\n  const show = () => {\r\n    const dt = document.getElementById(\"detailed-page\");\r\n    dt.style.top = `42px`;\r\n  };\r\n\r\n  const hide = () => {\r\n    const dt = document.getElementById(\"detailed-page\");\r\n    dt.style.top = `100vh`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (anime_id !== \"\") {\r\n      setGot(true);\r\n      show();\r\n      setId(\"\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [anime_id]);\r\n\r\n  return (\r\n    <div>\r\n      <Suspense fallback={rendering()}>\r\n        <div\r\n          className=\"content\"\r\n          style={{\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"center\",\r\n            width: \"98%\",\r\n            maxWidth: \"1100px\",\r\n            paddingBottom: \"50px\",\r\n          }}\r\n        >\r\n          {content.map((anime) => (\r\n            <button\r\n              className=\"card-btn\"\r\n              style={{\r\n                width: \"fit-content\",\r\n                height: \"fit-content\",\r\n                background: \"transparent\",\r\n                margin: \"15px 10px\",\r\n              }}\r\n              onClick={() => {\r\n                setdata(anime);\r\n                setGot(false);\r\n                setId(anime.mal_id);\r\n              }}\r\n            >\r\n              <Card\r\n                key={anime.mal_id}\r\n                title={anime.title}\r\n                poster={anime.image_url}\r\n                rating={anime.score}\r\n              />\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </Suspense>\r\n      <div id=\"detailed-page\">\r\n        <button id=\"close-btn\" onClick={hide}>\r\n          close\r\n        </button>\r\n        <div>\r\n          <Details key={data.mal_id} got={got} details={data} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n"],"sourceRoot":""}