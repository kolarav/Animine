{"version":3,"sources":["components/js files/Details.js","components/js files/Content.js"],"names":["Details","anime","episodes","details","got","style","flexDirection","alignItems","marginTop","textAlign","paddingBottom","justifyContent","height","overflow","className","src","image_url","alt","id","score","title","type","start_date","end_date","Card","lazy","Content","content","useState","anime_id","setId","data","setdata","setGot","useEffect","document","getElementById","top","fallback","flexWrap","width","maxWidth","map","background","margin","onClick","mal_id","poster","rating"],"mappings":"gKAwDeA,MAtDf,SAAiBC,GACf,IAAIC,EAAWD,EAAME,QAAQD,SAK7B,OAJiB,OAAbA,IACFA,EAAW,cAGa,IAAtBD,EAAME,QAAQC,IAEd,sBACEC,MAAO,CACLC,cAAe,SACfC,WAAY,SACZC,UAAW,OACXC,UAAW,UALf,UAQE,oBAAIJ,MAAO,CAAEK,cAAe,QAA5B,0BACA,mDACA,4DACA,iDAKF,qBACEL,MAAO,CACLC,cAAe,SACfK,eAAgB,SAChBJ,WAAY,SACZC,UAAW,OACXI,OAAQ,OACRC,SAAU,UAEZC,UAAU,SATZ,SAWE,sBAAKA,UAAU,QAAf,UACE,qBAAKC,IAAKd,EAAME,QAAQa,UAAWC,IAAI,UAAUC,GAAG,WACpD,sBAAKJ,UAAU,cAAcT,MAAO,CAAEC,cAAe,UAArD,UACE,0CAAaL,EAAME,QAAQgB,SAC3B,yCAAYlB,EAAME,QAAQiB,SAC1B,wCAAWnB,EAAME,QAAQkB,QACzB,6CAAgBnB,KAChB,8CAAiBD,EAAME,QAAQmB,cAC/B,2CACY,IACTrB,EAAME,QAAQoB,SAAWtB,EAAME,QAAQoB,SAAW,uBC5C3DC,EAAOC,gBAAK,kBAAM,gCA6ETC,UA1Ef,YAA+B,IAAZC,EAAW,EAAXA,QACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsBJ,oBAAS,GAA/B,mBAAOxB,EAAP,KAAY6B,EAAZ,KAqBA,OATAC,qBAAU,WACS,KAAbL,IACFI,GAAO,GAXEE,SAASC,eAAe,iBAChC/B,MAAMgC,IAAT,OAYEP,EAAM,OAGP,CAACD,IAGF,gCACE,cAAC,WAAD,CAAUS,SA5BQ,yCA4BlB,SACE,qBACExB,UAAU,UACVT,MAAO,CACLkC,SAAU,OACV5B,eAAgB,SAChB6B,MAAO,MACPC,SAAU,SACV/B,cAAe,QAPnB,SAUGiB,EAAQe,KAAI,SAACzC,GAAD,OACX,wBACEa,UAAU,WACVT,MAAO,CACLmC,MAAO,cACP5B,OAAQ,cACR+B,WAAY,cACZC,OAAQ,aAEVC,QAAS,WACPb,EAAQ/B,GACRgC,GAAO,GACPH,EAAM7B,EAAM6C,SAXhB,SAcE,cAACtB,EAAD,CAEEJ,MAAOnB,EAAMmB,MACb2B,OAAQ9C,EAAMe,UACdgC,OAAQ/C,EAAMkB,OAHTlB,EAAM6C,iBASrB,sBAAK5B,GAAG,gBAAR,UACE,wBAAQA,GAAG,YAAY2B,QArDhB,WACAV,SAASC,eAAe,iBAChC/B,MAAMgC,IAAT,SAmDI,mBAGA,8BACE,cAAC,EAAD,CAA2BjC,IAAKA,EAAKD,QAAS4B,GAAhCA,EAAKe","file":"static/js/4.6883a2fb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Details(anime) {\r\n  let episodes = anime.details.episodes;\r\n  if (episodes === null) {\r\n    episodes = \"Not fixed\";\r\n  }\r\n\r\n  if (anime.details.got === false) {\r\n    return (\r\n      <div\r\n        style={{\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          marginTop: \"30px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <h1 style={{ paddingBottom: \"10px\" }}>loading data</h1>\r\n        <h3>taking too long ?</h3>\r\n        <h3>we might not have the data</h3>\r\n        <h2>sorry buddy!</h2>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div\r\n        style={{\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          marginTop: \"40px\",\r\n          height: \"70vh\",\r\n          overflow: \"hidden\",\r\n        }}\r\n        className=\"holder\"\r\n      >\r\n        <div className=\"upper\">\r\n          <img src={anime.details.image_url} alt=\"loading\" id=\"poster\" />\r\n          <div className=\"information\" style={{ flexDirection: \"column\" }}>\r\n            <h2>Rating: {anime.details.score}</h2>\r\n            <h2>Title: {anime.details.title}</h2>\r\n            <h2>Type: {anime.details.type}</h2>\r\n            <h2>Epiosodes: {episodes}</h2>\r\n            <h2>Start Date: {anime.details.start_date}</h2>\r\n            <h2>\r\n              End Date:{\" \"}\r\n              {anime.details.end_date ? anime.details.end_date : \"Not sure\"}\r\n            </h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Details;\r\n","import React, { lazy, Suspense, useEffect, useState } from \"react\";\r\nimport \"../css files/Details.css\";\r\nimport Details from \"./Details\";\r\nconst Card = lazy(() => import(\"./Card\"));\r\nconst rendering = () => <h4>loading</h4>;\r\n\r\nfunction Content({ content }) {\r\n  const [anime_id, setId] = useState(\"\");\r\n  const [data, setdata] = useState([]);\r\n  const [got, setGot] = useState(false);\r\n\r\n  const show = () => {\r\n    const dt = document.getElementById(\"detailed-page\");\r\n    dt.style.top = `42px`;\r\n  };\r\n\r\n  const hide = () => {\r\n    const dt = document.getElementById(\"detailed-page\");\r\n    dt.style.top = `100vh`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (anime_id !== \"\") {\r\n      setGot(true);\r\n      show();\r\n      setId(\"\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [anime_id]);\r\n\r\n  return (\r\n    <div>\r\n      <Suspense fallback={rendering()}>\r\n        <div\r\n          className=\"content\"\r\n          style={{\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"center\",\r\n            width: \"98%\",\r\n            maxWidth: \"1100px\",\r\n            paddingBottom: \"50px\",\r\n          }}\r\n        >\r\n          {content.map((anime) => (\r\n            <button\r\n              className=\"card-btn\"\r\n              style={{\r\n                width: \"fit-content\",\r\n                height: \"fit-content\",\r\n                background: \"transparent\",\r\n                margin: \"15px 10px\",\r\n              }}\r\n              onClick={() => {\r\n                setdata(anime);\r\n                setGot(false);\r\n                setId(anime.mal_id);\r\n              }}\r\n            >\r\n              <Card\r\n                key={anime.mal_id}\r\n                title={anime.title}\r\n                poster={anime.image_url}\r\n                rating={anime.score}\r\n              />\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </Suspense>\r\n      <div id=\"detailed-page\">\r\n        <button id=\"close-btn\" onClick={hide}>\r\n          close\r\n        </button>\r\n        <div>\r\n          <Details key={data.mal_id} got={got} details={data} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n"],"sourceRoot":""}